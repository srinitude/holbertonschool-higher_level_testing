0x0A-python-inheritance/7-base_geometry.txt module
====================

Importing the class from the module:
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
	>>> m = __import__("7-base_geometry").__doc__
	>>> len(m) > 1
	True

Checking for class docstring:
	>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
	>>> len(c) > 1
	True

Checking for __init__ method docstring
        >>> f = __import__("7-base_geometry").BaseGeometry.__init__.__doc__
        >>> len(f) > 1
        True

Checking for area method docstring
        >>> f = __import__("7-base_geometry").BaseGeometry.area.__doc__
        >>> len(f) > 1
        True

Checking for integer_validator method docstring
        >>> f = __import__("7-base_geometry").BaseGeometry.integer_validator.__
doc__
        >>> len(f) > 1
        True

Checking given test case
        >>> bg = BaseGeometry()

      	>>> bg.integer_validator("my_int", 12)
	      True

      	>>> bg.integer_validator("width", 89)
	      True

       	>>> bg.integer_validator("name", "John")
	      Traceback (most recent call last):
		        ...
	      TypeError: name must be an integer

      	>>> bg.integer_validator("age", 0)
	      Traceback (most recent call last):
		        ...
    	  ValueError: age must be greater than 0

       	>>> bg.integer_validator("distance", -4)
       	Traceback (most recent call last):
		        ...
	      ValueError: distance must be greater than 0
